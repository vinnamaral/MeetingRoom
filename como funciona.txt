the strategy was:
we have an array of intervals and each interval is represented by 2 items array and the first item is the starting time of a meeting and the second item is the end time of a meeting, so if we have a meeting like 0 30 that means we have a meeting started from time 0 and end time 30...and 5 10 and 15 20...so the question is to find the minimum number of conference rooms required

so in the example of the question we can see the minimum number of conference and the maximum number of conference room and see that we can have two concurrent meetings happen so as analyze the input we can figure out a strategy that we can scanning from left to right and when we meet a START time of a meeting which is +1 for the conference room then if we meet an END time of a meeting which is -1 for the conference room and from the beginning to the end we just need another valuable to tracking what is the maximum number of the conference room, so that's our strategy...so how we scaning from left to right and how we know the number we made is a start time or an end time, the thing to do is to have a data structure and use 2 arrays...the first array is start time and the second array is to store all the end time, so start time from example is 0 5 and 15 and end time as 10 20 and 30 so we sort to a race then now we have 2 pointers, i and j, i poiting the begining of start time, j pointing the beginning of end time then we compare the start time and end time...

so if starting time i is smaller than end time j that means the start time happened first, so if the meeting happeened first we need a meeting room so we add 1 to the meeting room, so meeting room ++...then we have already started a meeting so we move the start time i to the next point, so we move i from 0 to 5, now we have a meeting room number is 1, then we continue comparing that number i pointing to and the number j pointing to we still find 5 is smaller than 10 so meeting room ++, now we have meeting room is 2, then we move i to next to 1 again...

now we find that end time is smaller than start time, so 10 is smaller than 15 and 15 is larger than 10 that means the end time happened first a meeting will end first so meeting room is vacuumed so meeting room --, now we have meeting room number is 1 now we use the end time so continue move j to the next number of end time...

in all a way along this process we just need another valuable to keep tracking the maximum number of m, the maximum number of meeting rooms then we reach the end of the start time i...i reached the end when all the meeting have started, all the left is closing meeting so all the left is end meeting, so we don't need any more conference room, so we can stop here we don't need to continue to the process, there is no larger number we can find, so we can stop the loop here, so that's our strategy






